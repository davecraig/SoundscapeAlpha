name: Build app

env:
  # The name of the main module repository
  main_project_module: app

  # The name in the Play Store
  playstore_name: Soundscape

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    environment: development

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set version As Env Variable
      - name: Set 'git describe --tags' as version
        run: echo "version=$(git describe --tags)" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'
          cache: 'gradle'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      # Setup release build keys
      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.SIGNING_KEY_STORE_BASE64 }}
          SIGNING_KEY_STORE_PATH: ${{ secrets.SIGNING_KEY_STORE_PATH }}

        run: |
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > ${{ env.main_project_module }}/$SIGNING_KEY_STORE_PATH

      # Setup Google maps keys
      - name: Configure Google maps API key
        env:
          GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API }}

        run: |
          echo -n "MAPS_API_KEY=" > secrets.properties
          echo $GOOGLE_MAPS_API_KEY >> secrets.properties

      # Run Tests Build
      - name: Run gradle tests
        run: ./gradlew test

      # Run Build Project
      - name: Build gradle project
        env:
          SIGNING_KEY_STORE_PATH: ${{ secrets.SIGNING_KEY_STORE_PATH }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: ./gradlew build

      # Create APK Debug
      - name: Build apk debug project (APK) - ${{ env.main_project_module }} module
        run: ./gradlew assembleDebug

      # Create APK Release
      - name: Build apk release project (APK) - ${{ env.main_project_module }} module
        env:
          SIGNING_KEY_STORE_PATH: ${{ secrets.SIGNING_KEY_STORE_PATH }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: ./gradlew assemble

      # Create Bundle AAB Release
      # Noted for main module build [main_project_module]:bundleRelease
      - name: Build app bundle release (AAB) - ${{ env.main_project_module }} module
        env:
          SIGNING_KEY_STORE_PATH: ${{ secrets.SIGNING_KEY_STORE_PATH }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: ./gradlew ${{ env.main_project_module }}:bundleRelease

      # Upload Artifact Build
      # Noted For Output [main_project_module]/build/outputs/apk/debug/
      - name: Upload APK Debug - ${{ env.playstore_name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.version }} - debug APK
          path: ${{ env.main_project_module }}/build/outputs/apk/debug/

      # Noted For Output [main_project_module]/build/outputs/apk/release/
      - name: Upload APK Release - ${{ env.playstore_name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.version }} - release APK
          path: |
            ${{ env.main_project_module }}/build/outputs/apk/release/
            ${{ env.main_project_module }}/build/outputs/mapping/release/

      # Noted For Output [main_project_module]/build/outputs/bundle/release/
      - name: Upload AAB (App Bundle) Release - ${{ env.playstore_name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.version }} - release AAB
          path: |
            ${{ env.main_project_module }}/build/outputs/bundle/release/
            ${{ env.main_project_module }}/build/outputs/mapping/release/

      #- name: Create Github Release
      #  uses: softprops/action-gh-release@v1
      #  with:
      #    generate_release_notes: true
      #    prerelease: true
      #    files: |
      #      ${{ env.main_project_module }}/build/outputs/apk/release/app-release.apk
      #      ${{ env.main_project_module }}/build/outputs/bundle/release/app-release.aab
